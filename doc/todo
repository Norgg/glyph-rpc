done:
    move to wsgi, requests. move to params as constructor
    mapper
    transient objects
    silent server
    make_server ssl args
    carry over args to werzkeug
    form bug
    documentation
    removed prints
    split out

todo:
    documentation:
        cookbook more examples 
            changing resources/adding methods/versioning
            doing it by hand 

    tests/cookbook
    make examples/pricechecker/
        client.py - fetch prices from server
        server.py - serve prices
            add caching
            add sharding
        test.py
            add loadbalancers, test caching, sharding version too


    persistent objects:
        extend mapper with pool
        some expire, some don't ?

        split out object to page from Resource.get()
            
        no: make @hate.r a wrapper around a normal object ?
        wrapping functions as resources?

    form values handled in serializer ?

        
    session handling in client

    mapper:
        _ is private?
        hate.crawl() - return links ?

    properties:
        handle @properties and produce getters and setters (GET/PUT/DELETE)

    decorators?
        @GET? @POST?
        @safe? @expires @idempotent
        @content_type
        @accept
        @ssl_only

    overrides:
        method, content type
        url mapping, query arguments
        @resource <-> @property, allow ovveriding bits of methods?

    embeds: 
        look at hypermedia afforance list:
            safety, idempotence, mutability, nav/embed

            link ->
                mapped to a function, always get()
            form -> (mutable, navigation, non-idempotent, unsafe)
                mapped to a function with args, always post()

            embed (im/mutable, transclusion, idempotent, safe/unsafe)
                -> mapped to a propertyr - __get__ calls get,
                __set__ calls put, __del__ calls delete

            inlining:
                returning an element within a collection page
        
    caching?
        session handling....

    collections:
        like an embed/property, but behaves with the __getitem__ calls ?
        inlining - behaves like a link, isn't.

    snapshot?

    versioning?
        in the url? in a form?

    browser - needs content negociation, can use werkzeug templates to make html5/bootstrap interface.



usecases/testcases
    atom pub 
    mail server?
    mail store? forum
    queue (herp?)
    snmp?
    scraper pool ?
        sharding, load balancing, caching, extending
    twitter api
        last-modified embedding hack
            use embedded for all new items, links for all client is expected to have already
    rest talk?
        

ideas:
    jquery plugin?

    db cursors alike for collections ? pagination
